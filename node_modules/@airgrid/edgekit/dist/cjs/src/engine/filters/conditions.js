"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logisticRegressionCondition = exports.cosineSimilarityCondition = exports.versionMatches = void 0;
var math_1 = require("./math");
var guards_1 = require("./guards");
exports.versionMatches = function (query, pageFeatures) { return pageFeatures.version === query.featureVersion; };
var isCosineSimilarityGreatherThanThreshold = function (queryValue, pageFeatures) {
    return pageFeatures.length === queryValue.vector.length
        ? math_1.cosineSimilarity(pageFeatures, queryValue.vector) > queryValue.threshold
        : false;
};
var isLogisticRegressionGreatherThanThreshold = function (queryValue, pageFeatures) {
    return pageFeatures.length === queryValue.vector.length
        ? math_1.sigmoid(math_1.dotProduct(queryValue.vector, pageFeatures) + queryValue.bias) >
            queryValue.threshold
        : false;
};
exports.cosineSimilarityCondition = function (query, pageFeatures) {
    return guards_1.isCosineSimilarityFilterType(query) &&
        guards_1.isNumberArray(pageFeatures.value) &&
        isCosineSimilarityGreatherThanThreshold(query.queryValue, pageFeatures.value);
};
exports.logisticRegressionCondition = function (query, pageFeatures) {
    return guards_1.isLogisticRegressionFilterType(query) &&
        guards_1.isNumberArray(pageFeatures.value) &&
        isLogisticRegressionGreatherThanThreshold(query.queryValue, pageFeatures.value);
};
//# sourceMappingURL=conditions.js.map